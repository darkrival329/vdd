---
# roles/vdd_pip_manager/tasks/main.yml

- name: "1. Validate required inputs"
  assert:
    that:
      - config_global.python_dependencies is defined
      - config_global.release_version    is defined
      - config_global.release_date       is defined
    fail_msg: "Missing required key(s) in dependency_config.json"

- name: "2. Ensure requirements.txt exists"
  file:
    path: "{{ requirements_file }}"
    state: touch

- name: "3. Update each dependency in requirements.txt"
  replace:
    path: "{{ requirements_file }}"
    regexp: '^({{ item.name }})==.*$'
    replace: '\1=={{ item.version }}'
    backup: false
  loop: "{{ config_global.python_dependencies }}"
  register: replace_results

- name: "4. Build list of actually updated packages"
  set_fact:
    updated_packages: >-
      {{ replace_results.results
         | selectattr('changed') 
         | map(attribute='item') 
         | list
      }}

- name: "5. DEBUG: show which packages changed"
  debug:
    var: updated_packages
  when: debug_mode

- name: "6. Prepend changelog entry"
  blockinfile:
    path: "{{ changelog_path }}"
    create: yes             # ← will create the file if it doesn’t exist
    insertafter: BOF
    backup: false
    block: |
      ## {{ config_global.release_version }} — {{ config_global.release_date }}
      {% for pkg in updated_packages %}
      * Updated: {{ pkg.name }} → {{ pkg.version }}
      {% endfor %}
  when: updated_packages | length > 0